# Identifica o workflow no GitHub
name: Lançamento de Versão

# Executa ao atualizar main e dev ou PRs na dev
on:
  release:
    types: [ published ]

# Define o job de teste para rodar no Ubuntu
jobs:
  tests:
    runs-on: ubuntu-latest
    # Cria jobs para cada versão do Python listada
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: Faz Checkout do Código
      uses: actions/checkout@v5

    - name: Configura Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Instala Dependências
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Executa Testes
      run: |
        pytest tests/ -v --tb=short

  deploy:
    runs-on: ubuntu-latest
    needs: tests

    steps:
    - name: Checkout do Código
      uses: actions/checkout@v5

    - name: Configura Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Instala Dependências
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build twine

    - name: Constrói Pacote
      run: |
        python -m build
    
    - name: Verifica Pacote
      run: |
        twine check dist/*
    
    - name: Publica no PyPI
      uses: pypa/gh-action-pypi-publish@release
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
